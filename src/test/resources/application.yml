cardano:
  network: ${CARDANO_NETWORK:preprod}
  facilitator:
    user:
      mnemonic: ${FACILITATOR_ACCOUNT_MNEMONIC}
  test:
    user:
      mnemonic: ${TEST_USER_MNEMONIC}
  service:
    user:
      mnemonic: ${SERVICE_ACCOUNT_MNEMONIC}
      address: ${SERVICE_USER_ADDRESS}
    fee:
      receiver:
        mnemonic: ${FEE_RECEIVER_MNEMONIC}
      partner:
        address: ${FEE_RECEIVER_PARTNER_ADDRESS}
  backend:
    service:
      type: ${CARDANO_BACKEND_TYPE:blockfrost}
    blockfrost:
      projectId: ${BLOCKFROST_PROJECT_ID}
      baseUrl: ${BLOCKFROST_BASE_URL}

extensions:
  connected-goods:
    encryption:
      salt: ${CONNECTED_GOODS_ENCRYPTION_SALT}
    enabled: ${CONNECTED_GOODS_EXTENSION_ENABLED:true}
    service-wallet:
      mnemonic: ${CONNECTED_GOODS_SERVICE_WALLET_MNEMONIC}
      address: ${CONNECTED_GOODS_SERVICE_WALLET_ADDRESS}

store:
  sync-auto-start: false
  cardano:
    host: ${REMOTE_NODE_URL:preprod-node.world.dev.cardano.org}
    port: ${REMOTE_NODE_PORT:30000}
    protocol-magic: ${PROTOCOL_MAGIC:1}
    sync-start-slot: 80086574
    sync-start-blockhash: 4f9308fcc35bc2fffc399171dc36d3730bcd4f4e9349dd59362f1fdb8604fde8
    sync-auto-start: false

cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS:*}

spring:
  profiles:
    active: ${SPRING_ACTIVE_PROFILES:preprod,h2}
  main:
    banner-mode: off
  flyway:
    locations:
      - classpath:db/store/{vendor}
      - classpath:db/migration/uverify
    out-of-order: true
  jpa:
    database-platform: ${DB_DIALECT:org.hibernate.dialect.H2Dialect}
  h2:
    console:
      enabled: true
  datasource:
    url: ${DB_URL:jdbc:h2:mem:uverify-test}
    username: ${DB_USERNAME:sa}
    password: ${DB_PASSWORD:password}

logging:
  level:
    root: INFO
    io.uverify.backend.service: DEBUG

apiPrefix: /api/v1