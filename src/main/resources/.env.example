# .env.example
#
# This file provides example environment variables for the UVerify application.
# Copy this file to .env and modify the values to match your specific configuration.
#
# ==============================================================================
# General Configuration
# ==============================================================================

# Spring Active Profiles:  Choose the active profiles for your environment.
#   - preprod:  Use the pre-production environment.
#   - mainnet:  Use the mainnet environment.
#   - h2:       Use the H2 in-memory database (for development/testing).
#   - postgres: Use a PostgreSQL database.
#   - https:    Enable HTTPS.
SPRING_ACTIVE_PROFILES=preprod,h2

# Logging Level:  Set the logging level for the application.
#   - DEBUG:   Detailed debugging information.
#   - INFO:    General information messages.
#   - WARN:    Warning messages.
#   - ERROR:   Error messages only.
LOG_LEVEL=INFO

# Log File:  Specify the file where application logs will be written.
#   If not specified, logs will be written to the console.
LOG_FILE=./logs/uverify-backend.log

# CORS Allowed Origins:  Specify the allowed origins for Cross-Origin Resource Sharing (CORS).
#   This is important for web applications to prevent security issues.
CORS_ALLOWED_ORIGINS=http://localhost:3000

# ==============================================================================
# HTTPS Configuration (Only required if 'https' profile is enabled)
# ==============================================================================

# Key Store Password:  The password for your keystore file (e.g., .jks or .p12).
#   This is required when the 'https' profile is active to enable secure communication.
KEY_STORE_PASSWORD=

# ==============================================================================
# Database Configuration (Choose either H2 or PostgreSQL)
# ==============================================================================

# Database URL:  The connection URL for the H2 in-memory database or the PostgreSQL.
DB_URL=jdbc:h2:./data/db

# ==============================================================================
# Cardano Configuration
# ==============================================================================

# Service User Address:  The Cardano wallet address used by the service.
#   This address is used for various operations on the blockchain.
SERVICE_USER_ADDRESS=addr_test1qqgmew8y57fsfc3me40zha3gjplehxv0gwgz7sw3mdpenqgs8flgvgd7y0mwwkk5p96a8hfdptxrawepr2evqhl2aj3sr9vgye

# Service Account Mnemonic (Optional): The mnemonic phrase for the service account.
#   - Required for building transactions on testnet.
#   - Not required for mainnet.
#   - Use with caution and NEVER commit to public repositories.
SERVICE_ACCOUNT_MNEMONIC=

# Facilitator Account Mnemonic (Optional): Mnemonic to sign authentication messages for state queries.
#   - Use with caution and NEVER commit to public repositories.
FACILITATOR_ACCOUNT_MNEMONIC=

# Cardano Backend Type:  Specify the backend to use for interacting with the Cardano blockchain.
#   - blockfrost: Use the Blockfrost.io API
#   - koios:      Use the Koios API
CARDANO_BACKEND_TYPE=blockfrost

# Cardano Network:  Specify the Cardano network to connect to.
#   - PREPROD: Use the pre-production testnet.
#   - MAINNET: Use the mainnet network.
CARDANO_NETWORK=PREPROD

# ==============================================================================
# Blockfrost Configuration (Required if CARDANO_BACKEND_TYPE=blockfrost)
# ==============================================================================

# Blockfrost Project ID:  Your unique project ID from Blockfrost.io.
#   This is required to authenticate with the Blockfrost API.
BLOCKFROST_PROJECT_ID=preprod...123aBc

# Blockfrost Base URL:  The base URL for the Blockfrost API.
#   Typically, you should not need to change this unless Blockfrost instructs you to.
BLOCKFROST_BASE_URL=https://cardano-preprod.blockfrost.io/api/v0/

# ==============================================================================
# Connected Goods Extension Configuration (Optional)
# ==============================================================================

# Connected Goods Extension Enabled:  Enable or disable the Connected Goods extension.
CONNECTED_GOODS_EXTENSION_ENABLED=false

# Connected Goods Service Wallet Address:  Address for testing the Connected Goods extension.
#   Not required for production environments.
CONNECTED_GOODS_SERVICE_WALLET_ADDRESS=

# Connected Goods Encryption Salt:  A salt used for the double encryption layer of user data.
#   This should be a randomly generated string for security purposes.
CONNECTED_GOODS_ENCRYPTION_SALT=

# ==============================================================================
# Tadamon Extension Configuration (Optional)
# ==============================================================================

# Tadamon Extension Enabled:  Enable or disable the Tadamon extension.
TADAMON_EXTENSION_ENABLED=false

# Tadamon Allowed Addresses:  Comma-separated list of addresses allowed to use the Tadamon extension.
TADAMON_ALLOWED_ADDRESSES=

# Tadamon Google Sheets Private Key:  The private key for the Google Sheets API.
#   - Ensure this is securely stored and NEVER commit to public repositories.
#   - Replace the placeholder with your actual private key.
TADAMON_GOOGLE_SHEETS_PRIVATE_KEY="-----BEGIN PRIVATE KEY-----\nABC1....2345=\n-----END PRIVATE KEY-----\n"

# Tadamon Google Sheets Service Account:  The service account email for the Google Sheets API.
TADAMON_GOOGLE_SHEETS_SERVICE_ACCOUNT=my-google-sheets-update-serivce@xyz.iam.gserviceaccount.com

# Tadamon Google Sheets ID:  The ID of the Google Sheet to update.
TADAMON_GOOGLE_SHEETS_ID=1FZZA0N...AaaAVe