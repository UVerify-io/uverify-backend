server:
  port: ${PORT:9090}

spring:
  profiles:
    active: ${SPRING_ACTIVE_PROFILES:preprod,h2}
  main:
    banner-mode: off
  flyway:
    out-of-order: true
    locations:
      - classpath:db/store/{vendor}
      - classpath:db/migration/h2/uverify
  datasource:
    url: ${DB_URL:jdbc:h2:./data/db}
    username: ${DB_USERNAME:sa}
    password: ${DB_PASSWORD:password}

springdoc:
  writer-with-default-pretty-printer: true
  api-docs:
    path: /v1/api-docs
  swagger-ui:
    path: /swagger-ui.html
    display-request-duration: true

apiPrefix: /api/v1

logging:
  file:
    name: ./logs/uverify-backend.log

management:
  endpoints:
    web:
      exposure:
        include:
          - health
          - info
          - prometheus

store:
  sync-auto-start: ${YACI_STORE_AUTO_START:true}
  cardano:
    host: ${REMOTE_NODE_URL:backbone.cardano.iog.io}
    port: ${REMOTE_NODE_PORT:3001}
    protocol-magic: 764824073
    sync-start-slot: 153422988
    sync-start-blockhash: c6b1c0eebd697a25bbcc429f4d66258b83db07ad060b13065612e50410bda7b2
    sync-auto-start: ${YACI_STORE_AUTO_START:true}
  blocks:
    epoch-calculation-interval=14400:  # 14400 = 4 hours

cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS:*}

cardano:
  network: ${CARDANO_NETWORK:preprod}
  facilitator:
    user:
      mnemonic: ${FACILITATOR_ACCOUNT_MNEMONIC:}
  test:
    user:
      mnemonic: ${TEST_USER_MNEMONIC:}
  service:
    user:
      mnemonic: ${SERVICE_ACCOUNT_MNEMONIC:}
      address: ${SERVICE_USER_ADDRESS}
    fee:
      receiver:
        mnemonic: ${FEE_RECEIVER_MNEMONIC:}
      partner:
        address: ${FEE_RECEIVER_PARTNER_ADDRESS:}
  backend:
    service:
      type: ${CARDANO_BACKEND_TYPE:blockfrost}
    blockfrost:
      projectId: ${BLOCKFROST_PROJECT_ID}
      baseUrl: ${BLOCKFROST_BASE_URL}

extensions:
  connected-goods:
    encryption:
      salt: ${CONNECTED_GOODS_ENCRYPTION_SALT}
    enabled: ${CONNECTED_GOODS_EXTENSION_ENABLED:true}
    service-wallet:
      mnemonic: ${CONNECTED_GOODS_SERVICE_WALLET_MNEMONIC:}
      address: ${CONNECTED_GOODS_SERVICE_WALLET_ADDRESS}

---
spring:
  config:
    activate:
      on-profile: postgres
  datasource:
    driverClassName: ${DB_DRIVER:org.postgresql.Driver}
    url: ${DB_URL:jdbc:postgresql://localhost:5432/uverify}
  flyway:
    locations:
      - classpath:db/store/{vendor}
      - classpath:db/migration/postgres/uverify
---
spring:
  config:
    activate:
      on-profile: h2
  jpa:
    database-platform: ${DB_DIALECT:org.hibernate.dialect.H2Dialect}
  flyway:
    locations:
      - classpath:db/store/{vendor}
      - classpath:db/migration/h2/uverify
  h2:
    console:
      enabled: true
  datasource:
    url: ${DB_URL:jdbc:h2:mem:uverify}
---
spring:
  config:
    activate:
      on-profile: https
server:
  port: ${SSL_PORT:8443}
  http:
    port: ${PORT:9090}
  ssl:
    key-store: classpath:keystore.p12
    key-store-password: ${KEY_STORE_PASSWORD}
    key-store-type: PKCS12
    key-alias: api_uverify_io
---
spring:
  config:
    activate:
      on-profile: preprod
store:
  cardano:
    host: ${REMOTE_NODE_URL:preprod-node.world.dev.cardano.org}
    port: ${REMOTE_NODE_PORT:30000}
    protocol-magic: ${PROTOCOL_MAGIC:1}
    sync-start-slot: 80086574
    sync-start-blockhash: 4f9308fcc35bc2fffc399171dc36d3730bcd4f4e9349dd59362f1fdb8604fde8
logging:
  level:
    root: INFO
    io.uverify.backend.service: DEBUG
---